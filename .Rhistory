class(UniquePatientList3[1])
class(UniquePatientList3$MRN)
as.vector(UniquePatientList3$MRN)
class(as.vector(UniquePatientList3$MRN))
UniquePatientList3 = UniquePatientList2
for (t in 7:13){
ComplicationTrue = lapply(UniquePatientList3$MRN, HasComplication, ComplicationColumn = t)
UniquePatientList3[t] = ComplicationTrue
}
warnings()
lapply(c(1,2,3,5),function(x){return (x+1)})
sapply(c(1,2,3,5),function(x){return (x+1)})
UniquePatientList3 = UniquePatientList2
for (t in 7:13){
ComplicationTrue = sapply(UniquePatientList3$MRN, HasComplication, ComplicationColumn = t)
UniquePatientList3[t] = ComplicationTrue
}
as.vector(UniquePatientList3$MRN)
UniquePatientList3$Confirmed.Infection
UniquePatientList3[UniquePatientList3$`Cardiac Device Admissions` > 3,]
UniquePatientList3[UniquePatientList3$Confirmed.Pneumothorax == 'TRUE',]
UniquePatientList3[UniquePatientList3$'Confirmed pericarditis myocarditis or endocarditis' == 'TRUE',]
UniquePatientList3[UniquePatientList3$'Confirmed.pericarditis.myocarditis.or.endocarditis' == 'TRUE',]
UniquePatientList3[UniquePatientList3$'Confirmed.pericardial.effusion.or.tamponade' == 'TRUE',]
colnames(dat[7])
library(openxlsx)
library(plyr)
library(ggplot2)
source('auxiliary.R')
PatientDataFile = 'raw data/CARDIAC DEVICES 2012 TO 30042017.xlsx'
##read sheet 1 (2012)
##columns are
##1 = MN, 2 = AN, 3 = Surname, 4 = Firstname, 5 = Age, 6 = Gender
PatientData = read.xlsx(PatientDataFile, sheet = 1, cols = c(1,2,3,4,5,6))
##read sheets 2-6 (2013 - 2017).
for (t in 2:6){
dat = read.xlsx(PatientDataFile, sheet = t, cols = c(1,2,3,4,5,6) )
PatientData = rbind(PatientData, dat)
}
##add all patients who had TRUE complications to list
## columns are
## 1 = MN, 2 = AN, 3 = Surname, 4 = Firstname, 5 = Age, 6 = Gender, 8 = Confirmed complication
PatientsWithComplicationsFile = 'raw data/20180101 Complication data collection .xlsx'
dat = read.xlsx(PatientsWithComplicationsFile, sheet = 1, cols = (c(1,2,3,4,5,6,8)))
PatientsWithComplicationsData = dat[(!is.na(dat[,7]) & dat[,7] == 'TRUE'),]
for (t in 2:11){
dat = read.xlsx(PatientsWithComplicationsFile, sheet = t, cols = (c(1,2,3,4,5,6,8)))
print (t)
print (names(dat[7]))
datComplicationTrue = dat[(!is.na(dat[,7]) & dat[,7] == 'TRUE'),]
if (nrow(datComplicationTrue) > 0){
PatientsWithComplicationsData = rbind.all.columns(PatientsWithComplicationsData, datComplicationTrue)
}
else{
PatientsWithComplicationsData[,colnames(dat[7])] = FALSE
}
}
colnames(PatientsWithComplicationsData)[c(1,3,4,5,6)] = c('MRN', 'Surname', 'Patient.Given.Name', 'Age', 'Sex')
CombinedPatientData = rbind.all.columns(PatientData, PatientsWithComplicationsData)
AdmissionCount = as.data.frame(table(CombinedPatientData$MRN[!duplicated(CombinedPatientData$AN)]))
colnames(AdmissionCount) = c('MRN', 'Cardiac Device Admissions')
UniquePatientList = CombinedPatientData[!duplicated(CombinedPatientData$MRN),]
UniquePatientList2 = merge(UniquePatientList, AdmissionCount, by="MRN")
HasComplication = function(PatientMRN, ComplicationColumn){
ComplicationTrue = any(CombinedPatientData[CombinedPatientData$MRN == PatientMRN, ComplicationColumn], na.rm=TRUE)
return (ComplicationTrue)
}
UniquePatientList3 = UniquePatientList2
for (t in 7:13){
ComplicationTrue = sapply(UniquePatientList3$MRN, HasComplication, ComplicationColumn = t)
UniquePatientList3[t] = ComplicationTrue
}
UniquePatientList3[UniquePatientList3$`Cardiac Device Admissions` > 2]
UniquePatientList3[UniquePatientList3$`Cardiac Device Admissions` > 2,]
UniquePatientList3[7:13,]
UniquePatientList3[,7:13]
UniquePatientList3[,7:13 == 'FALSE']
UniquePatientList3[7:13 == 'FALSE',]
UniquePatientList3[7:13]
UniquePatientList3[UniquePatientList[7:13] == FALSE,]
nrow(UniquePatientList3)
UniquePatientList3[UniquePatientList3$Confirmed.Infection == FALSE,]
nrow(UniquePatientList3[UniquePatientList3$Confirmed.Infection == FALSE,])
colnames(UniquePatientList3)
CategorizedDeviceNamesFile = 'raw data/Device Type List completed.csv'
DeviceTypes = read.csv(CategorizedDeviceNamesFile)
DeviceTypes
colnames(DeviceTypes)
DeviceTypes$Device.type
ListOfDeviceTypes = 'raw data/List Of Device Types.csv'
DeviceTypes = read.csv(ListOfDeviceTypes)
DeviceTypes
CategorisedDeviceListFile = 'raw data/Device Names and Type.csv'
CategorisedDeviceList = read.csv(CategorisedDeviceListFile)
CategorisedDeviceList
colnames(CategorisedDeviceList)
factors(CategorisedDeviceList$Device.Type)
factor(CategorisedDeviceList$Device.Type)
levels(factor(CategorisedDeviceList$Device.Type))
CategorisedDeviceList$Device.Type[CategorisedDeviceList$Device.Type == 'ICD '] = 'ICD'
levels(factor(CategorisedDeviceList$Device.Type))
CategorisedDeviceList$Device.Type[CategorisedDeviceList$Device.Type == 'Pacemaker'] = 'PPM'
CategorisedDeviceList$Device.Type[CategorisedDeviceList$Device.Type == 'Pacemaker DC'] = 'PPM DC'
CategorisedDeviceList$Device.Type[CategorisedDeviceList$Device.Type == 'Pacemaker SC'] = 'PPM SC'
CategorisedDeviceList$Device.Type[CategorisedDeviceList$Device.Type == 'PPM SC '] = 'PPM SC'
levels(factor(CategorisedDeviceList$Device.Type))
UniquePatientList3$MRN
UniquePatientList3$MRN[UniquePatientList3$MRN == "MN00683241"]
UniquePatientList3[UniquePatientList3$MRN == "MN00683241"]
UniquePatientList3[UniquePatientList3$MRN == "MN00683241",]
UniquePatientList3[UniquePatientList3$MRN == "MN0063643",]
UniquePatientList3[UniquePatientList3$MRN == "MN00063643",]
PatientDeviceInformationFile = 'raw data/Device Information.xlsx'
PatientDeviceInformation = read.xlsx(PatientDeviceInformationFile, sheet = c(1:5), cols = c(1,2,3,4,5,6,7))
PatientDeviceInformationFile = 'raw data/Device Information.xlsx'
PatientDeviceInformation = read.xlsx(PatientDeviceInformationFile, sheet = 1, cols = c(1:7))
for (t in 2:5){
dat = read.xlsx(PatientDeviceInformationFile, sheet = t, cols = c(1:7))
PatientDeviceInformation = rbind(PatientDeviceInformation, dat)
}
ncol(PatientDeviceInformation)
nrow(PatientDeviceInformation)
colnames(PatientDeviceInformation)
PatientDeviceInformation$ID
PatientDeviceInformation$ID[1]
strlen(50678)
length(50678)
str(50678)
char(50678)
as.char(50678)
as.character(50678)
length(as.character(50678))
nchar(50678)
rep
strrep(0,3)
convertPatientIDToMRN = function(x){
if (x != NA){
currentID = x
}
ptMRN = "MN"
ptMRN = ptMRN + strrep(0,8-nchar(currentID))+currentID
return (ptMRN)
}
convertPatientIDToMRN(NA)
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID = x
}
ptMRN = "MN"
ptMRN = ptMRN + strrep(0,8-nchar(currentID))+currentID
return (ptMRN)
}
convertPatientIDToMRN(NA)
currentID = PatientDeviceInformation$ID[1]
convertPatientIDToMRN(NA)
8-nchar(currentID)
strrep(0,8-nchar(currentID))
strrep(0,8-nchar(currentID))+MN
strrep(0,8-nchar(currentID))+"MN"
"MN"+"55"
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID = x
}
ptMRN = "MN"
ptMRN = paste(ptMRN, strrep(0,8-nchar(currentID)),currentID)
return (ptMRN)
}
convertPatientIDToMRN(NA)
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID = x
}
ptMRN = "MN"
ptMRN = paste(ptMRN, strrep(0,8-nchar(currentID)),currentID, collapse = '')
return (ptMRN)
}
convertPatientIDToMRN(NA)
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID = x
}
ptMRN = "MN"
ptMRN = paste(ptMRN, strrep(0,8-nchar(currentID)),currentID, collapse = "")
return (ptMRN)
}
convertPatientIDToMRN(NA)
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID = x
}
ptMRN = "MN"
ptMRN = paste(ptMRN, strrep(0,8-nchar(currentID)),currentID, collapse = "", sep="")
return (ptMRN)
}
convertPatientIDToMRN(NA)
UniquePatientList3[UniquiePatientList3$MRN == convertPatientIDToMRN(NA),]
UniquePatientList3[UniquePatientList3$MRN == convertPatientIDToMRN(NA),]
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$ID, convertPatientIDToMRN)
PatientDeviceInformation$MRN
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID << x
}
ptMRN = paste("MN", strrep(0,8-nchar(currentID)),currentID, collapse = "", sep="")
return (ptMRN)
}
convertPatientIDToMRN = function(x){
if (!is.na(x)){
currentID <- x
}
ptMRN = paste("MN", strrep(0,8-nchar(currentID)),currentID, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$ID, convertPatientIDToMRN)
PatientDeviceInformation$MRN
PatientDeviceInformation$IDFilled = fill(PatientDeviceInformation$ID)
library (tidyr)
fillTheBlanks <- function(x, missing=""){
rle <- rle(as.character(x))
empty <- which(rle$value==missing)
rle$values[empty] <- rle$value[empty-1]
inverse.rle(rle)
}
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(currentID)),currentID, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$MRN
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$MRN
PatientDeviceInformation$IDFilled
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID, missing=NA)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$IDFilled
PatientDeviceInformation$MRN
PatientDeviceInformation$IDFilled
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID, missing="NA")
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$IDFilled
rle(as.character(PatientDeviceInformation$ID))
fillTheBlanks <- function(x, missing=""){
rle <- rle(as.character(x))
empty <- which(is.na(rle$value))
rle$values[empty] <- rle$value[empty-1]
inverse.rle(rle)
}
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$IDFilled
fillTheBlanks <- function(x, missing=""){
currentVal = x[1]
for (t in length(x)){
if (is.na(x[t])){
x[t] = currentVal
}
else{
currentVal = x[t]
}
}
}
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
fillTheBlanks <- function(x, missing=""){
currentVal = x[1]
for (t in length(x)){
if (is.na(x[t])){
x[t] = currentVal
}
else{
currentVal = x[t]
}
}
return (x)
}
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$MRN
PatientDeviceInformation$IDFilled
length(PatientDeviceInformation$ID)
PatientDeviceInformation$ID[1]
PatientDeviceInformation$ID[2]
PatientDeviceInformation$ID[3]
fillTheBlanks <- function(x, missing=""){
currentVal = x[1]
for (t in 2:length(x)){
if (is.na(x[t])){
x[t] = currentVal
}
else{
currentVal = x[t]
}
}
return (x)
}
PatientDeviceInformation$IDFilled = fillTheBlanks(PatientDeviceInformation$ID)
convertPatientIDToMRN = function(x){
ptMRN = paste("MN", strrep(0,8-nchar(x)),x, collapse = "", sep="")
return (ptMRN)
}
PatientDeviceInformation$MRN = sapply(PatientDeviceInformation$IDFilled, convertPatientIDToMRN)
PatientDeviceInformation$MRN
colnames(PatientDeviceInformation)
CategorisedDeviceList
CategorisedDeviceList[,c(1,3)]
colnames(CategorisedDeviceList)
CategorisedDeviceList[,c(1,4)]
CategorisedDeviceList[1:5,c(1,4)]
colnames(PatientDeviceInformation)
colnames(PatientDeviceInformation$Equipment) = 'Device.Name'
colnames(PatientDeviceInformation[5]) = 'Device.Name'
colnames(PatientDeviceInformation)
PatientDeviceInformation
colnames(PatientDeviceInformation)[5] = 'Device.Name'
colnames(PatientDeviceInformation)
CategorisedDeviceList[,c(1,4)]
PatientDeviceInformation2 = merge(PatientDeviceInformation, CategorisedDeviceList[,c(1,4)], by="Device.Name")
PatientDeviceInformation2
colnames(PatientDeviceInformation2)
PatientDeviceInformation2$Device.Type
PatientDeviceInformation2$Device.Type[PatientDeviceInformation2$MRN = "MN00150698"]
PatientDeviceInformation2$Device.Type[PatientDeviceInformation2$MRN == "MN00150698"]
PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == "PPM DC"]
PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == "PPM DC"]
PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == "PPM SC"]
PatientDeviceInformation2$Vendor
levels(factors(PatientDeviceInformation2$Vendor))
levels(factor(PatientDeviceInformation2$Vendor))
z = data.frame(ID = c(1,2,3,4,5,6), Name = c("Shashi", "Shak","Kim Fendel", "Wilhelmina Blocher", "Angela Nallimelli", "Jan Ho")
z = data.frame(ID = c(1,2,3,4,5,6), Name = c("Shashi", "Shak","Kim Fendel", "Wilhelmina Blocher", "Angela Nallimelli", "Jan Ho"))
z = data.frame(ID = c(1,2,3,4,5,6), Name = c("Shashi", "Shak","Kim Fendel", "Wilhelmina Blocher", "Angela Nallimelli", "Jan Ho"))
z
xx = data.frame(ID = c(1,3), worked2017 = rep(TRUE,2))
xx
jb= merge(z,xx,by="ID")
jb
jb= merge(xx,z,by="ID")
jb
z$ID == xx$ID
z$ID %in% xx$ID
DeviceTypes
PatientDeviceInformation[PatientDeviceInformation$Device.Type = 'CRT-D']
PatientDeviceInformation[PatientDeviceInformation$Device.Type == 'CRT-D']
PatientDeviceInformation[PatientDeviceInformation$Device.Type == 'CRT-D ']
PatientDeviceInformation[PatientDeviceInformation$Device.Type == 'PPM']
PatientDeviceInformation2[PatientDeviceInformation2$Device.Type == 'PPM']
colnames(PatientDeviceInformation2)
PatientDeviceInformation2[PatientDeviceInformation2$Device.Type == 'PPM']
PatientDeviceInformation2[PatientDeviceInformation2$'Device.Type' == 'PPM']
PatientDeviceInformation2[PatientDeviceInformation2$'Device.Type' == 'PPM',]
PatientDeviceInformation2[PatientDeviceInformation2$'Device.Type' == 'CRT-D',]
PatientDeviceInformation2[PatientDeviceInformation2$'Device.Type' == 'CRT-P',]
DeviceTypes
PatientDeviceInformation2[PatientDeviceInformation2$'Device.Type' == 'Loop recorder',]
DeviceTypes
## connect our giant UniquePatientList with Device List
## what we want is a column for PPM DC, PPM SC, ICD, CRTD,CRTP, ICD
## flag as true if they have had that kind of device inserted, false otherwise
## we can also do the brands they have had inserted!
##
UniquePatientList3$'PPM DC' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == 'PPM DC']
UniquePatientList3$MRN[UniquePatientList3$'PPM DC']
UniquePatientList3$MRN[UniquePatientList3$'PPM.DC']
UniquePatientList3$'PPM DC'
UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == 'PPM DC']
PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == 'PPM DC']
PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == 'PPM DC',]
PatientDeviceInformation2$MRN[PatientDeviceInformation$Device.Type == 'PPM DC']
colnames(PatientDeviceInformation2)
PatientDeviceInformation2$Device.Type
PatientDeviceInformation2$Device.Type == 'PPM DC'
PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'PPM DC']
## connect our giant UniquePatientList with Device List
## what we want is a column for PPM DC, PPM SC, ICD, CRTD,CRTP, ICD
## flag as true if they have had that kind of device inserted, false otherwise
## we can also do the brands they have had inserted!
##
UniquePatientList3$'PPM DC' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'PPM DC']
UniquePatientList3'PPM DC'
UniquePatientList3$'PPM DC'
UniquePatientList3$MRN[UniquePatientList3$'PPM DC']
DeviceType2
DeviceType2
DeviceTypes
## connect our giant UniquePatientList with Device List
## what we want is a column for PPM DC, PPM SC, ICD, CRTD,CRTP, ICD
## flag as true if they have had that kind of device inserted, false otherwise
## we can also do the brands they have had inserted!
##
UniquePatientList3$'PPM DC' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'PPM DC']
UniquePatientList3$'PPM SC' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'PPM SC']
UniquePatientList3$'PPM' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'PPM']
UniquePatientList3$'Loop recorder' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'Loop recorder']
UniquePatientList3$'CRT-D' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'CRT-D']
UniquePatientList3$'CRT-P' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'CRT-P']
UniquePatientList3$'ICD' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Device.Type == 'ICD']
colnames(UniquePatientList3)
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma & UniquePatientList3$`PPM DC`]
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma & UniquePatientList3$`PPM DC`,]
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma & UniquePatientList3$`PPM SC`,]
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma & UniquePatientList3$`ICD`,]
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma,]
UniquePatientList3[UniquePatientList3$Confirmed.Haematoma]
UniquePatientList3[UniquePatientList3$Confirmed.haematoma]
UniquePatientList3[UniquePatientList3$Confirmed.haematoma,]
UniquePatientList3[UniquePatientList3$Confirmed.haematoma & UniquePatientList3$'PPM DC',]
UniquePatientList3[UniquePatientList3$`Cardiac Device Admissions` > 2,]
UniquePatientList3$'Known Device' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN
length(UniquePatientList3[UniquePatientList3$'Known Device',])
UniquePatientList3$'Known Device'
length(UniquePatientList3'Known Device')
length(UniquePatientList3$'Known Device')
table(UniquePatientList3$'Known Device')
PatientDeviceInformation2$Vendor
Levels(PatientDeviceInformation2$Vendor)
evels(PatientDeviceInformation2$Vendor)
levels(PatientDeviceInformation2$Vendor)
levels(factor(PatientDeviceInformation2$Vendor))
PatientDeviceInformation2$Vendor[PatientDeviceInformation2$Vendor == 'St Jude'] = 'St Jude Medical'
levels(factor(PatientDeviceInformation2$Vendor))
PatientDeviceInformation2$Vendor[PatientDeviceInformation2$Vendor == 'St Jude Medical'] = 'ST JUDE MEDICAL'
levels(factor(PatientDeviceInformation2$Vendor))
UniquePatientList3$'BIOTRONIK' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Vendor == 'BIOTRONIK']
UniquePatientList3$'Boston Scientific' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Vendor == 'Boston Scientific']
UniquePatientList3$'Medtronic' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Vendor == 'Medtronic']
UniquePatientList3$'ST JUDE MEDICAL' = UniquePatientList3$MRN %in% PatientDeviceInformation2$MRN[PatientDeviceInformation2$Vendor == 'ST JUDE MEDICAL']
table(UniquePatientList3$MRN[UniquePatientList3$'Boston Scientific'])
length(UniquePatientList3$MRN[UniquePatientList3$'Boston Scientific'])
length(UniquePatientList3$MRN[UniquePatientList3$'Medtronic'])
length(UniquePatientList3$MRN[UniquePatientList3$'ST JUDE MEDICAL'])
length(UniquePatientList3$MRN[UniquePatientList3$'BIOTRONIK'])
275+109+347+42
length(UniquePatientList3$'Known Devices')
length(UniquePatientList3$'Known Device')
table(UniquePatientList3$'Known Device')
colnames(UniquePatientList3)
levels(factor(PatientDeviceInformation2$Device.Name))
grep('Tendril^', 'Tendril MRI')
grep('Tendril^', 'Tendril^')
grepl('Tendril^', 'Tendril^')
grepl('Tendril^', 'Tendril')
grepl('Tendril^', 'Tendril    ')
grepl('Tendril', 'Tendril    ')
grepl('Tendril', 'Tendril MRI 44213  ')
grepl('Tendril', 'Tendr3  ')
grepl('Tendril', PatientDeviceInformation2$Device.Name)
table(grepl('Tendril', PatientDeviceInformation2$Device.Name))
TendrilMRIPatients = PatientDeviceInformation$MRN[grepl('Tendril', PatientDeviceInformation2$Device.Name)]
TendrilMRIPatients
TendrilComplications = UniquePatientList3[UniquePatientList3$MRN %in% TendrilMRIPatients]
TendrilComplications = UniquePatientList3[UniquePatientList3$MRN %in% TendrilMRIPatients,]
colnames(TendrilComplications)
TendrilComplications$Confirmed.mechanical.complication
TendrilComplications[TendrilComplications[,7:13],]
TendrilComplications[,7:13]
TendrilComplications[,any(7:13)]
any(TendrilComplications[,(7:13)])
any(TendrilComplications[,7:13])
any(as.numeric(TendrilComplications[,7:13]))
TendrilComplications
PatientDeviceInformation[PatientDeviceInformation$MRN == 'MN00142549',]
PatientDeviceInformation2[PatientDeviceInformation$MRN == 'MN00142549',]
PatientDeviceInformation2[PatientDeviceInformation2$MRN == 'MN00142549',]
TendrilMRIPatients = PatientDeviceInformation2[grepl('Tendril MRI', PatientDeviceInformation2$Device.Name,]
TendrilMRIPatients = PatientDeviceInformation2[grepl('Tendril MRI', PatientDeviceInformation2$Device.Name),]
TendrilComplications = UniquePatientList3[UniquePatientList3$MRN %in% TendrilMRIPatients$MRN,]
TendrilComplications
TendrilComplications[TendrilComplications$Confirmed.mechanical.complication,]
TendrilSTSPatients = PatientDeviceInformation2[grepl('Tendril STS', PatientDeviceInformation2$Device.Name),]
TendrilComplications = UniquePatientList3[UniquePatientList3$MRN %in% TendrilSTSPatients$MRN,]
TendrilComplications
TendrilComplications[TendrilComplications$Confirmed.mechanical.complication,]
levels(factor(UniquePatientList3$Confirmed.Infection))
UniquePatientList3[1:10,]
UniquePatientList3[1:10,800:823]
UniquePatientList3[800:823,]
colnames(dat[7])
UniquePatientList3[UniquePatientList3$MRN == 'MN00142549',]
UniquePatientList3[UniquePatientList3$MRN == 'MN00222946',]
UniquePatientList3[UniquePatientList3$Confirmed.pericardial.effusion.or.tamponade,]
UniquePatientList3$Confirmed.pericardial.effusion.or.tamponade
UniquePatientList3$Confirmed.pericarditis.myocarditis.or.endocarditis
UniquePatientList3$Confirmed.General.complication
colnames(CombinedPatientData)
CombinedPatientData$Confirmed.General.complication
